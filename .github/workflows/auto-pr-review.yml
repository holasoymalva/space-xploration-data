name: Automated PR and Review Generator

on:
  # Ejecutar según un horario
  schedule:
    - cron: '0 */6 * * *'  # Cada 6 horas
  
  # Permitir ejecución manual
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  create-and-review-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Git Identity
        run: |
          git config --global user.name "holasoymalva"
          git config --global user.email "alquimista3301@gmail.com"
          
      - name: Create unique branch
        run: |
          # Crear nombre de rama único con timestamp
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          BRANCH_NAME="auto-update-$TIMESTAMP"
          
          # Crear rama
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Make changes
        run: |
          # Crear directorio para cambios automatizados si no existe
          mkdir -p auto-updates
          
          # Generar contenido aleatorio
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
          RANDOM_ID=$((RANDOM % 10000))
          FILE_PATH="auto-updates/update-$RANDOM_ID.md"
          
          # Crear archivo con contenido
          cat > $FILE_PATH << EOF
# Actualización Automática

**Timestamp:** $TIMESTAMP
**ID:** $RANDOM_ID

## Cambios realizados

Esta actualización incluye:
- Mejora de documentación
- Optimización de código
- Actualización de archivos de configuración

---
*Generado automáticamente*
EOF
          
          # Hacer commit de los cambios
          git add $FILE_PATH
          git commit -m "Actualización automática $TIMESTAMP"
          
          # Guardar ruta del archivo para referencia
          echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
          
      - name: Push branch
        run: |
          # Enviar rama al repositorio
          git push --set-upstream origin $BRANCH_NAME
          
      - name: Create Pull Request
        id: create_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Actualización automatizada - ${new Date().toISOString().split('T')[0]}`,
              body: `## Descripción
            
            Esta PR contiene actualizaciones generadas automáticamente para mejorar la documentación y estructura del repositorio.
            
            ## Cambios
            - Añadido archivo de documentación
            - Actualización de contenido existente
            - Mejoras generales
            
            ---
            *Generado por GitHub Actions*`,
              head: process.env.BRANCH_NAME,
              base: 'main'
            });
            
            // Guardar número de PR para uso posterior
            console.log(`Pull request creado: #${result.data.number}`);
            return result.data.number;
            
      - name: Add comments and review
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ steps.create_pr.outputs.result }};
            
            // Añadir comentario general a la PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `Esta PR se ve bien. Los cambios son claros y bien documentados.`
            });
            
            // Añadir comentario en el archivo específico
            await github.rest.pulls.createReviewComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: `El formato de este documento es excelente. Buen trabajo en la estructura.`,
              path: process.env.FILE_PATH,
              line: 5,
              side: 'RIGHT'
            });
            
            // Enviar una revisión aprobatoria
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: `He revisado estos cambios y todo parece estar en orden. Buen trabajo en la documentación y estructura.`,
              event: 'APPROVE'
            });
            
      - name: Merge Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ steps.create_pr.outputs.result }};
            
            // Mezclar la PR automáticamente
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'merge'
            });
            
            console.log(`Pull request #${prNumber} mezclado correctamente`);